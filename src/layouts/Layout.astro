---
import '../styles/globals.css';

export interface Props {
  title: string;
  description: string;
  image?: string;
}

const { title, description, image = '/og-image.jpg' } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content="Sanjay Dhandapani" />
    <meta name="keywords" content="Sanjay Dhandapani, Full Stack Developer, Software Engineer, React, Node.js, TypeScript, JavaScript, Web Development, Portfolio" />
    <meta name="robots" content="index, follow" />
    <meta name="theme-color" content="#000000" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />
    <meta property="og:site_name" content="Sanjay Dhandapani - Portfolio" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={Astro.url} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={new URL(image, Astro.url)} />
    <meta name="twitter:creator" content="@sanjay_dhandapani" />
    
    <!-- Preload fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=JetBrains+Mono:wght@100..800&display=swap" rel="stylesheet" />
    
    <!-- Theme detection script -->
    <script is:inline>
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
      
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
      window.localStorage.setItem('theme', theme);
    </script>
  </head>
  
  <body class="min-h-screen bg-white dark:bg-gray-900 text-black dark:text-white antialiased overflow-x-hidden cursor-none transition-colors duration-300">
    
    <!-- Animated background -->
    <div class="fixed inset-0 -z-10">
      <!-- Gradient background -->
      <div class="absolute inset-0 bg-gradient-to-br from-white via-gray-50 to-gray-100 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 transition-colors duration-300"></div>
      
      <!-- Animated particles -->
      <div class="absolute inset-0 overflow-hidden">
        <div class="absolute -inset-10 opacity-50">
          <div class="absolute top-1/4 left-1/4 w-96 h-96 bg-gray-200 dark:bg-gray-800 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob"></div>
          <div class="absolute top-1/3 right-1/4 w-96 h-96 bg-gray-300 dark:bg-gray-700 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-2000"></div>
          <div class="absolute -bottom-8 left-1/3 w-96 h-96 bg-gray-400 dark:bg-gray-600 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-4000"></div>
        </div>
      </div>
    </div>

    <div class="relative flex min-h-screen flex-col z-10">
      <slot />
    </div>
    
    <!-- Performance and accessibility improvements -->
    <script>
      // Smooth scroll polyfill for older browsers
      if (!('scrollBehavior' in document.documentElement.style)) {
        import('smoothscroll-polyfill').then(smoothscroll => {
          smoothscroll.polyfill();
        });
      }
      
      // Preload critical resources
      const preloadCriticalImages = () => {
        const criticalImages = [
          '/images/hero-bg.jpg',
          '/images/profile.jpg'
        ];
        
        criticalImages.forEach(src => {
          const link = document.createElement('link');
          link.rel = 'preload';
          link.as = 'image';
          link.href = src;
          document.head.appendChild(link);
        });
      };
      
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', preloadCriticalImages);
      } else {
        preloadCriticalImages();
      }
    </script>
  </body>
</html>
