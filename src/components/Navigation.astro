---
import ThemeToggle from "./ui/ThemeToggle.tsx";
import MotionToggle from "./ui/MotionToggle.tsx";
---

<nav
  class="fixed top-0 left-0 right-0 z-50 bg-background/95 backdrop-blur-sm border-b border-border/10"
  role="navigation"
  aria-label="Primary"
>
  <div class="container mx-auto max-w-7xl px-6">
    <div class="flex h-16 items-center justify-between">
      <!-- Brand -->
      <a href="/" class="flex items-center gap-3 focus:outline-none focus-visible:ring-2 focus-visible:ring-accent/50 rounded-lg px-2 py-1 group">
        <span class="text-2xl">✦</span>
        <span class="font-jetbrains font-semibold tracking-tight text-foreground group-hover:text-accent transition-colors duration-200">sanjay</span>
      </a>

      <!-- Desktop nav -->
      <ul class="hidden md:flex items-center gap-8 text-sm">
        <li><a href="/" class="text-muted-foreground hover:text-foreground transition-colors duration-200 font-medium">Home</a></li>
        <li><a href="#projects" class="text-muted-foreground hover:text-foreground transition-colors duration-200 font-medium">Projects</a></li>
        <li><a href="#about" class="text-muted-foreground hover:text-foreground transition-colors duration-200 font-medium">About</a></li>
        <li><a href="#contact" class="text-muted-foreground hover:text-foreground transition-colors duration-200 font-medium">Contact</a></li>
      </ul>

      <!-- Utilities -->
      <div class="hidden md:flex items-center gap-3">
        <ThemeToggle client:load />
        <MotionToggle client:load />
      </div>

      <!-- Mobile: hamburger and utilities inline -->
      <div class="md:hidden flex items-center gap-2">
        <ThemeToggle client:load />
        <MotionToggle client:load />
        <button
          class="inline-flex h-10 w-10 items-center justify-center rounded-lg border border-border/20 bg-card/50 text-foreground hover:bg-card hover:border-border transition-all duration-200"
          type="button"
          aria-controls="mobile-menu"
          aria-expanded="false"
          aria-label="Open menu"
          data-menu-toggle
        >
          <span aria-hidden="true" class="text-lg">☰</span>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div id="mobile-menu" class="md:hidden">
    <div class="px-6 pb-6 pt-2 border-t border-border/10 bg-background/98">
      <ul class="grid gap-1 text-sm">
        <li><a href="/" class="block rounded-lg px-4 py-3 text-muted-foreground hover:text-foreground hover:bg-card/50 transition-all duration-200">Home</a></li>
        <li><a href="#projects" class="block rounded-lg px-4 py-3 text-muted-foreground hover:text-foreground hover:bg-card/50 transition-all duration-200">Projects</a></li>
        <li><a href="#about" class="block rounded-lg px-4 py-3 text-muted-foreground hover:text-foreground hover:bg-card/50 transition-all duration-200">About</a></li>
        <li><a href="#contact" class="block rounded-lg px-4 py-3 text-muted-foreground hover:text-foreground hover:bg-card/50 transition-all duration-200">Contact</a></li>
      </ul>
    </div>
  </div>
</nav>

<style>
  /* Progressive enhancement: basic CSS-only toggle using :has when available */
  @supports selector(nav:has(button[data-menu-toggle][aria-expanded="true"])) {
    nav:has(button[data-menu-toggle][aria-expanded="true"]) #mobile-menu {
      display: block;
    }
  }
</style>

<script is:raw>
  // Small progressive enhancement for mobile menu: no framework, accessibility friendly
  (function () {
    const nav = document.currentScript?.closest('nav');
    if (!nav) return;
    const btn = nav.querySelector('button[data-menu-toggle]');
    const menu = nav.querySelector('#mobile-menu');
    if (!btn || !menu) return;

    function closeOnEscape(e) {
      if (e.key === 'Escape') {
        btn.setAttribute('aria-expanded', 'false');
        btn.setAttribute('aria-label', 'Open menu');
      }
    }

    btn.addEventListener('click', () => {
      const expanded = btn.getAttribute('aria-expanded') === 'true';
      btn.setAttribute('aria-expanded', String(!expanded));
      btn.setAttribute('aria-label', expanded ? 'Open menu' : 'Close menu');
    });

    document.addEventListener('keydown', closeOnEscape);
  })();
</script>