---
import ProjectStatus from "./ProjectStatus.astro";
import TechStack from "./TechStack.astro";

type Status = "draft" | "published";

export type ProjectFrontmatter = {
  title: string;
  slug: string;
  description: string;
  status?: Status;
  year?: string;
  category: "frontend" | "backend" | "fullstack" | "mobile";
  techStack: string[];
  featured?: boolean;
  liveUrl?: string;
  githubUrl?: string;
  coverImage?: string;
  highlights?: string[];
  order?: number;
};

const {
  project,
  href,
}: {
  project: ProjectFrontmatter;
  href: string;
} = Astro.props;
---

<article class="group relative flex h-full flex-col overflow-hidden rounded-lg border border-border bg-card shadow-md transition-transform hover:-translate-y-0.5 focus-within:-translate-y-0.5">
  <a href={href} class="absolute inset-0 z-10" aria-label={`View project ${project.title}`}></a>

  <div class="aspect-video w-full bg-gradient-to-br from-primary/10 to-secondary/10">
    {project.coverImage ? (
      <img
        src={project.coverImage}
        alt={`${project.title} cover`}
        class="h-full w-full object-cover"
        loading="lazy"
        decoding="async"
      />
    ) : (
      <div class="flex h-full w-full items-center justify-center text-muted text-sm">
        No image
      </div>
    )}
  </div>

  <div class="flex flex-1 flex-col gap-3 p-4">
    <div class="flex items-center justify-between gap-3">
      <h3 class="text-lg font-semibold text-fg group-hover:text-primary transition-colors">
        {project.title}
      </h3>
      <ProjectStatus status={project.status ?? "published"} />
    </div>

    <p class="text-sm text-muted line-clamp-3">{project.description}</p>

    <div class="mt-auto">
      <TechStack items={project.techStack} />
    </div>

    <div class="mt-2 flex items-center justify-between text-xs text-muted">
      <span class="capitalize">{project.category.replace("-", " ")}</span>
      {project.year && <span>{project.year}</span>}
    </div>
  </div>
</article>